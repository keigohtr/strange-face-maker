package com.apitore.potato.zzscruches;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import org.springframework.web.client.RestTemplate;

import com.apitore.banana.response.word2vec.VectorDistanceResponseEntity;
import com.apitore.banana.utils.UrlFormatter;


public class Word2Vec {

  static String ENDPOINT     = "https://api.apitore.com/api/8/word2vec-neologd-jawiki/vec_distance";
  static String ACCESS_TOKEN = "YOUR-ACCESS-TOKEN";

  public static void main(String[] args) {
    RestTemplate restTemplate = new RestTemplate();
    Map<String, String> params = new HashMap<String, String>();
    params.put("access_token", ACCESS_TOKEN);
    params.put("vector", "0.008426448330283165,0.04169358313083649,-0.028588363900780678,-0.006288248114287853,0.08122353255748749,-0.005876872222870588,-0.12747086584568024,-0.0941944494843483,0.02561681717634201,0.152076855301857,-0.07065147161483765,0.026680883020162582,-0.06110188364982605,-0.17192170023918152,-0.002713278867304325,0.060132384300231934,0.08801931142807007,0.10682632029056549,-0.03799252584576607,0.04345351830124855,-0.06992460787296295,0.134292334318161,0.007061465177685022,0.1267678439617157,-0.07090788334608078,-0.05481575429439545,0.01594485156238079,0.09533084183931351,0.0967278704047203,0.02441129833459854,0.02879497967660427,-0.03087146021425724,-0.07500548660755157,0.00912390649318695,-0.18431594967842102,-0.09636152535676956,0.011354289017617702,-0.04794501140713692,0.049937255680561066,-0.060869310051202774,-0.09456027299165726,0.029402904212474823,-0.04999500513076782,-0.12198285013437271,0.015717308968305588,-0.0335518904030323,0.029592830687761307,0.03905155882239342,0.026256529614329338,-0.07803133130073547,0.053227465599775314,0.038900043815374374,-0.11255696415901184,0.05913003534078598,-0.07770022004842758,0.04786183685064316,0.04584283381700516,-0.02666684426367283,-0.01361010130494833,0.04281804338097572,0.05374215170741081,0.07251842319965363,-0.05961452051997185,0.05723288282752037,0.05123787373304367,0.079390749335289,-0.07868137955665588,-0.1285468488931656,0.11823251843452454,0.11160203069448471,0.024287592619657516,0.11342369019985199,-0.032422926276922226,-0.012023668736219406,-0.08861876279115677,-0.05118595063686371,-0.12148909270763397,0.0854676216840744,-0.07811716198921204,0.021983837708830833,0.0668015405535698,0.052742186933755875,0.006306260824203491,0.016267752274870872,0.1565900593996048,0.16902510821819305,-0.08860975503921509,-0.07097014039754868,0.014169550500810146,0.029143840074539185,-0.11261498183012009,0.17007698118686676,0.047069814056158066,-0.010985296219587326,-0.04002556577324867,0.07296105474233627,0.11872653663158417,0.012144193984568119,0.07152535021305084,-0.046361491084098816,-0.017007064074277878,0.027770910412073135,-0.04269195720553398,0.014170610345900059,0.0334671251475811,-0.002807050244882703,-0.013322164304554462,-0.027212785556912422,-0.0393291637301445,-0.01261331606656313,0.03170454129576683,0.046885449439287186,-0.03527368605136871,0.05384890362620354,-0.006172755733132362,0.02397475764155388,0.04365960508584976,-0.17514488101005554,0.12000967562198639,0.008295591920614243,0.004328848794102669,0.10390350967645645,-0.13131654262542725,-0.1504509598016739,-0.03211194649338722,-0.06400932371616364,0.057356853038072586,-0.06769925355911255,0.04369456693530083,0.1015269085764885,-0.054982103407382965,-0.08809003978967667,-0.047145042568445206,0.037782732397317886,-0.0219480749219656,-0.0063356636092066765,-0.09350123256444931,-0.05537387728691101,-0.05619530752301216,-0.010875365696847439,0.0988149493932724,-0.1092778816819191,-0.07761546224355698,0.04502856358885765,0.029073379933834076,-0.05276867747306824,-0.06722192466259003,0.024236468598246574,-0.04495677351951599,-0.07606954872608185,-0.05253954976797104,-0.012235580943524837,-0.03116072155535221,-0.12367735803127289,-0.03219326585531235,-0.03491184487938881,-0.07389956712722778,0.002371834125369787,-0.048203278332948685,-0.03246213123202324,-0.023412657901644707,0.049233440309762955,0.04142577946186066,-0.03827834501862526,-0.013897772878408432,0.013349448330700397,-0.10250647366046906,-0.1082797721028328,0.026205139234662056,-0.11367056518793106,0.019238770008087158,0.018215762451291084,-0.0004466062819119543,0.08153557777404785,0.01650959812104702,0.0021599214524030685,0.15280742943286896,-0.06851247698068619,0.016146168112754822,-0.07937777042388916,0.08385628461837769,0.0599551685154438,-0.09065842628479004,-0.10828745365142822,0.018903683871030807,0.0636511966586113,-0.05677144601941109,0.10990753024816513,0.009464556351304054,-0.04025178402662277,0.04398409277200699,0.05839204788208008,-0.10275016725063324,0.009637265466153622,-0.02194463089108467,0.019267642870545387,-0.07491488754749298,0.04224720597267151,0.0027953949756920338,0.022979561239480972");
    params.put("num", "5");
    String url = UrlFormatter.format(ENDPOINT, params);

    VectorDistanceResponseEntity response =
        restTemplate.getForObject(url, VectorDistanceResponseEntity.class, params);

    System.out.println(response);
  }

  public static String run(double[] facevector) {
    String rtn = "apple";

    String vec = Arrays.toString(facevector).substring(1);
    vec = vec.substring(0,vec.length()-1);

    RestTemplate restTemplate = new RestTemplate();
    Map<String, String> params = new HashMap<String, String>();
    params.put("access_token", ACCESS_TOKEN);
    params.put("vector", vec);
    params.put("num", "5");
    String url = UrlFormatter.format(ENDPOINT, params);

    VectorDistanceResponseEntity response =
        restTemplate.getForObject(url, VectorDistanceResponseEntity.class, params);
    rtn = response.getDistances().get(0).getWord();
    return rtn;
  }

}
